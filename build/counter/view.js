import*as t from"@wordpress/interactivity";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const o=(r={getContext:()=>t.getContext,getElement:()=>t.getElement,store:()=>t.store},s={},e.d(s,r),s),{actions:n}=(0,o.store)("create-block",{actions:{toggle:()=>{const t=(0,o.getContext)();t.isOpen=!t.isOpen},increaseCount:()=>{(0,o.getContext)().currentCount++},decreaseCount:()=>{(0,o.getContext)().currentCount--},resetCount:()=>{(0,o.getContext)().currentCount=0},addTodo:()=>{const t=(0,o.getContext)(),{ref:e}=(0,o.getElement)(),n=e.parentElement.querySelector(".todo__input"),r=n.value;r&&(t.todos.push({text:r}),n.value="")},addTodoIfEnter:t=>{"Enter"===t.key&&n.addTodo()},removeTodo:()=>{const t=(0,o.getContext)(),{ref:e}=(0,o.getElement)(),n=e.parentElement.querySelector(".todo__item-content").textContent;t.todos=t.todos.filter((t=>t.text!==n))}},callbacks:{logIsOpen:()=>{const{isOpen:t}=(0,o.getContext)();console.log(`Is open: ${t}`)}}});var r,s;